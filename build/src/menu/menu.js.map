{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../../src/menu/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as yaml from 'js-yaml';\nimport {array, at, boolean, Decoder, number, object, string} from 'type-safe-json-decoder';\n\nimport {Index, Item, PID} from '../tokenizer';\nimport {copyArray, copyScalar} from '../utilities';\n\nexport interface MenuItem extends Item {\n  pid: PID;\n  name: string;\n  registerName: string;\n  aliases: string[];\n  defaults: PID[];\n  options: PID[];\n  price: number;\n  standalone: boolean;\n}\n\n// tslint:disable-next-line:no-any\nfunction MenuItemFromYamlItem(item: any) {\n  return {\n    pid: copyScalar<number>(item, 'pid', 'number'),\n    name: copyScalar<string>(item, 'name', 'string'),\n    registerName: copyScalar<string>(item, 'registerName', 'string'),\n    aliases: copyArray<string>(item, 'aliases', 'string'),\n    price: copyScalar<number>(item, 'price', 'number'),\n    standalone: copyScalar<boolean>(item, 'standalone', 'boolean'),\n    defaults: copyArray<number>(item, 'defaults', 'number'),\n    options: copyArray<number>(item, 'options', 'number'),\n  };\n}\n\nexport class Menu extends Index<MenuItem> {\n  items: {[index: number]: MenuItem} = {};\n\n  // TODO: return IMenu?\n  static fromJsonFilename(filename: string): Menu {\n    const json = fs.readFileSync(filename, 'utf8');\n\n    const menuItemsDecoder: Decoder<MenuItem[]> = array(object(\n        ['pid', number()], ['name', string()], ['register_name', string()],\n        ['aliases', array(string())], ['defaults', array(number())],\n        ['options', array(number())], ['price', number()],\n        ['standalone', boolean()],\n        (pid, name, registerName, aliases, defaults, options, price,\n         standalone) => ({\n          pid,\n          name,\n          registerName,\n          aliases,\n          defaults,\n          options,\n          price,\n          standalone\n        })));\n\n    const items: MenuItem[] = menuItemsDecoder.decodeJSON(json);\n    return new Menu(items);\n  }\n\n  static fromYamlFilename(filename: string): Menu {\n    // tslint:disable-next-line:no-any\n    const yamlMenu: any = yaml.safeLoad(fs.readFileSync(filename, 'utf8'));\n\n    if (typeof (yamlMenu) !== 'object') {\n      throw TypeError('Menu: expected a top-level object with items array.');\n    }\n\n    const yamlItems = yamlMenu['items'] as MenuItem[];\n    if (yamlItems === undefined || !Array.isArray(yamlMenu.items)) {\n      throw TypeError('Menu: expected items array.');\n    }\n\n    const items = yamlItems.map(MenuItemFromYamlItem);\n\n    return new Menu(items);\n  }\n\n  constructor(items: MenuItem[]) {\n    super();\n    items.forEach(this.addItem);\n  }\n\n  addItem =\n      (item: MenuItem) => {\n        if (item.pid in this.items) {\n          console.log(`Menu: skipping duplicate ${item.pid}`);\n        } else {\n          this.items[item.pid] = item;\n        }\n      }\n\n  length() {\n    return Object.keys(this.items).length;\n  }\n}\n"]}