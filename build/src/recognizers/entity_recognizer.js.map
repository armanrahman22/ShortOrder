{"version":3,"file":"entity_recognizer.js","sourceRoot":"","sources":["../../../src/recognizers/entity_recognizer.ts"],"names":[],"mappings":";;AAAA,kCAAuC;AACvC,4CAAuF;AAE1E,QAAA,MAAM,GAAkB,MAAM,CAAC,QAAQ,CAAC,CAAC;AAYtD,SAAgB,sBAAsB,CAClC,UAAkB,EAAE,QAAqB,EACzC,UAA2B,qBAAS,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK;IACzE,MAAM,KAAK,GAAG,WAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;IAEhD,MAAM,YAAY,GAAG,CAAC,GAAQ,EAAE,IAAY,EAAe,EAAE;QAC3D,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnC,OAAO,EAAC,IAAI,EAAE,cAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,IAAI,6BAAiB,CACxB,KAAK,EAAE,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AACzD,CAAC;AAZD,wDAYC","sourcesContent":["import {Menu, MenuItem} from '../menu';\nimport {PatternRecognizer, PID, StemmerFunction, Token, Tokenizer} from '../tokenizer';\n\nexport const ENTITY: unique symbol = Symbol('ENTITY');\nexport type ENTITY = typeof ENTITY;\n\nexport interface EntityToken extends Token {\n  type: ENTITY;\n  text: string;\n  pid: PID;\n  name: string;\n}\n\nexport type EntityRecognizer = PatternRecognizer<MenuItem>;\n\nexport function CreateEntityRecognizer(\n    entityFile: string, badWords: Set<string>,\n    stemmer: StemmerFunction = Tokenizer.defaultStemTerm, debugMode = false) {\n  const index = Menu.fromYamlFilename(entityFile);\n\n  const tokenFactory = (pid: PID, text: string): EntityToken => {\n    const name = index.items[pid].name;\n    return {type: ENTITY, pid, name, text};\n  };\n\n  return new PatternRecognizer(\n      index, tokenFactory, badWords, stemmer, debugMode);\n}\n"]}