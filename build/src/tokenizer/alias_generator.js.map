{"version":3,"file":"alias_generator.js","sourceRoot":"","sources":["../../../src/tokenizer/alias_generator.ts"],"names":[],"mappings":";;AAAA,SAAS,OAAO,CAAC,IAAY,EAAE,KAAa;IAC1C,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,KAAK,CAAC;KACd;SAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QAC7B,OAAO,IAAI,CAAC;KACb;SAAM;QACL,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC;KAC3B;AACH,CAAC;AAED,QAAQ,CAAC,CACL,qBAAqB,CAAC,MAAc,EAAE,OAAmB;IAE3D,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;QACtB,KAAK,MAAM,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YAC/B,KAAK,CAAC,CAAC,qBAAqB,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACzE;KACF;SAAM;QACL,MAAM,MAAM,CAAC;KACd;AACH,CAAC;AAED,QAAe,CAAC,CAAC,eAAe,CAAC,KAAa;IAC5C,MAAM,CAAC,GAAG,wBAAwB,CAAC;IAEnC,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE/B,IAAI,OAAO,KAAK,IAAI,EAAE;QACpB,MAAM,OAAO,GAAG,OAAO;aACF,GAAG,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACzB,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACtC;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aACvB;QACH,CAAC,CAAC;aACD,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1D,KAAK,CAAC,CAAC,qBAAqB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;KAC3C;AACH,CAAC;AAjBD,0CAiBC","sourcesContent":["function combine(left: string, right: string) {\n  if (left.length === 0) {\n    return right;\n  } else if (right.length === 0) {\n    return left;\n  } else {\n    return left + ' ' + right;\n  }\n}\n\nfunction*\n    generateAliasesHelper(prefix: string, options: string[][]):\n        IterableIterator<string> {\n  if (options.length > 0) {\n    for (const option of options[0]) {\n      yield* generateAliasesHelper(combine(prefix, option), options.slice(1));\n    }\n  } else {\n    yield prefix;\n  }\n}\n\nexport function* generateAliases(query: string) {\n  const m = /(\\[[^\\]]*\\])|([^\\[]*)/g;\n\n  const matches = query.match(m);\n\n  if (matches !== null) {\n    const options = matches\n                        .map(match => {\n                          if (match.startsWith('[')) {\n                            return match.slice(1, -1).split(',');\n                          } else {\n                            return [match.trim()];\n                          }\n                        })\n                        .filter(match => match[0].length > 0);\n    yield* generateAliasesHelper('', options);\n  }\n}\n"]}