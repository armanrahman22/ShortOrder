{"version":3,"file":"type_checking.js","sourceRoot":"","sources":["../../../src/utilities/type_checking.ts"],"names":[],"mappings":";;AAAA,kCAAkC;AAClC,SAAgB,UAAU,CACtB,IAA2B,EAAE,QAAgB,EAAE,IAAY;IAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAM,CAAC;IAClC,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,MAAM,SAAS,CAAC,sBAAsB,QAAQ,aAAa,CAAC,CAAC;KAC9D;IACD,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;QAC3B,MAAM,SAAS,CACX,cAAc,QAAQ,8BAA8B,IAAI,GAAG,CAAC,CAAC;KAClE;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAZD,gCAYC;AAED,kCAAkC;AAClC,SAAgB,SAAS,CACrB,IAA2B,EAAE,QAAgB,EAAE,IAAY;IAC7D,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAQ,CAAC;IACpC,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,MAAM,SAAS,CAAC,sBAAsB,QAAQ,aAAa,CAAC,CAAC;KAC9D;IACD,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;QAC/B,MAAM,SAAS,CACX,cAAc,QAAQ,8BAA8B,IAAI,KAAK,CAAC,CAAC;KACpE;IACD,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;QACtB,IAAI,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YAC7B,MAAM,SAAS,CAAC,cACZ,QAAQ,4CAA4C,IAAI,GAAG,CAAC,CAAC;SAClE;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACf,CAAC;AAlBD,8BAkBC","sourcesContent":["// tslint:disable-next-line:no-any\nexport function copyScalar<T>(\n    item: {[name: string]: any}, property: string, type: string): T {\n  const value = item[property] as T;\n  if (value === undefined) {\n    throw TypeError(`MenuItem: expects \"${property}\" property.`);\n  }\n  if (typeof (value) !== type) {\n    throw TypeError(\n        `MenuItem: \"${property}\" property should be type \"${type}\"`);\n  }\n\n  return value;\n}\n\n// tslint:disable-next-line:no-any\nexport function copyArray<T>(\n    item: {[name: string]: any}, property: string, type: string): T[] {\n  const value = item[property] as T[];\n  if (value === undefined) {\n    throw TypeError(`MenuItem: expects \"${property}\" property.`);\n  }\n  if (typeof (value) !== 'object') {\n    throw TypeError(\n        `MenuItem: \"${property}\" property should be type \"${type}[]\"`);\n  }\n  value.forEach(element => {\n    if (typeof (element) !== type) {\n      throw TypeError(`MenuItem: \"${\n          property}\" property should contain items of type \"${type}\"`);\n    }\n  });\n\n  return value;\n}\n"]}